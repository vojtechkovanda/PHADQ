addpath('audio_dequantization-main\Algorithms');
addpath('audio_dequantization-main\Tools');
addpath('audio_dequantization-main');

% sounds = {'a08_violin.wav', 'a16_clarinet.wav', 'a18_bassoon.wav', 'a25_harp.wav', 'a35_glockenspiel.wav', 'a41_celesta.wav', ...
%           'a42_accordion.wav', 'a58_guitar_sarasate.wav', 'a60_piano_schubert.wav', 'a66_wind_ensemble_stravinsky.wav'};
% 
ODG = zeros(1, 8);
ODG = zeros(1, 8);
idxODG = zeros(1, 8);
ODGi = zeros(1, 8);
idxODGi = zeros(1, 8);
ODGq = zeros(1, 8);
SDR = zeros(1, 8);
idxSDR = zeros(1, 8);
SDRi = zeros(1, 8);
idxSDRi = zeros(1, 8);
SDRq = zeros(1, 8);

SDRs = zeros(1, 8);
ODGs = zeros(1, 8);

ODGavg = zeros(1, 8);
idxODGavg = zeros(1, 8);
ODGiavg = zeros(1, 8);
idxODGiavg = zeros(1, 8);
ODGqavg = zeros(1, 8);
SDRavg = zeros(1, 8);
idxSDRavg = zeros(1, 8);
SDRiavg = zeros(1, 8);
idxSDRiavg = zeros(1, 8);
SDRqavg = zeros(1, 8);

SDRsavg = zeros(1, 8);
ODGsavg = zeros(1, 8);

for j=1:50
    

 for i=1:7
     display([num2str(j),' , ', num2str(i)]);

[SDR(i+1), idxSDR(i+1), SDRq(i+1), ODG(i+1), idxODG(i+1), ODGq(i+1)] = cp_main(['dataset/IRMAS/', num2str(j),'u.wav'], i+1, 'consistent');
[SDRi(i+1), idxSDRi(i+1), ~, ODGi(i+1), idxODGi(i+1), ~] = cp_main(['dataset/IRMAS/', num2str(j),'u.wav'], i+1, 'inconsistent');
[SDRs(i+1), ODGs(i+1)] = dequantization_main(['dataset/IRMAS/', num2str(j),'u.wav'], i+1);

 end

ODGavg = ODGavg + ODG;
idxODGavg = idxODGavg + idxODG;
ODGiavg = ODGiavg + ODGi;
idxODGiavg = idxODGiavg + idxODGi;
ODGqavg = ODGqavg + ODGq;
SDRavg = SDRavg + SDR;
idxSDRavg = idxSDRavg + idxSDR;
SDRiavg = SDRiavg + SDRi;
idxSDRiavg = idxSDRiavg + idxSDRi;
SDRqavg = SDRqavg + SDRq;

SDRsavg = SDRsavg + SDRs;
ODGsavg = ODGsavg + ODGs;


end

    ODGavg = ODGavg / 50;
    idxODGavg = idxODGavg / 50;
    ODGiavg = ODGiavg / 50;
    idxODGiavg = idxODGiavg / 50;
    ODGqavg = ODGqavg / 50;
    SDRavg = SDRavg / 50;
    idxSDRavg = idxSDRavg / 50;
    SDRiavg = SDRiavg / 50;
    idxSDRiavg = idxSDRiavg /50;
    SDRqavg = SDRqavg / 50;

    SDRsavg = SDRsavg / 50;
    ODGsavg = ODGsavg / 50;

figure
plot(ODGavg);
hold on
plot(ODGiavg);
plot(ODGqavg);
plot(ODGsavg);

figure
plot(SDRavg);
hold on
plot(SDRiavg);
plot(SDRqavg);
plot(SDRsavg);

figure
plot(idxSDRavg);
hold on
plot(idxODGavg*5-10);
plot(idxSDRiavg);
plot(idxODGiavg*5-10);